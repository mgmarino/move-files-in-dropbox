AWSTemplateFormatVersion: '2010-09-09'
Description: Move Files Dropbox 

Parameters:
  Environment:
    Type: String
    AllowedValues:
    - production
  Version:
    Type: String
  ClusterName:
    Type: String
    Default: move-files-dropbox 

Resources:

  MoveFilesLambdaRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Effect: Allow
          Principal:
            Service: lambda.amazonaws.com
          Action: sts:AssumeRole
      Path: /
      Policies:
        - PolicyName: RequestCFData
          PolicyDocument:
            Version: 2012-10-17
            Statement:
            - Effect: Allow
              Action: cloudformation:DescribeStackResource
              Resource: !Sub 'arn:aws:cloudformation:${AWS::Region}:${AWS::AccountId}:stack/${AWS::StackName}/*'
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole

  MoveFilesLambda:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket: !Sub 'move-files-dropbox-releases-${AWS::Region}'
        S3Key: !Sub "${Version}/move-files-dropbox.zip"
      Description: Transform files between directories 
      Handler: index.handler
      MemorySize: 128
      Role: !GetAtt MoveFilesLambdaRole.Arn
      Runtime: python3.6
      Timeout: 300
      Tags:
      - Key: Name
        Value: !Ref AWS::StackName
      - Key: Environment
        Value: !Ref Environment

  DailyProcessTrigger:
    Type: AWS::Events::Rule
    Properties:
      Description: 'Process daily files from dropbox' 
      ScheduleExpression: cron(0 19 * * ? *)
      State: ENABLED
      Targets:
        - Arn: !GetAtt MoveFilesLambda.Arn
          Id: !Sub 'DailyTriggerMoveFiles-${Environment}'

  DailyProcessTriggerPermissions:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !Ref MoveFilesLambda
      Action: lambda:InvokeFunction
      Principal: events.amazonaws.com
      SourceArn: !GetAtt DailyProcessTrigger.Arn



